<UserControl x:Class="MaritimeSecurityMonitoring.DateTimePicker"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:m="clr-namespace:MaritimeSecurityMonitoring"
             mc:Ignorable="d" 
             d:DesignHeight="30" d:DesignWidth="280">
    <UserControl.Resources>
        <ControlTemplate x:Key="UpTriButton" TargetType="{x:Type Button}">
            <Grid>
                <Polygon x:Name="ButtonPolygon" Stretch="Fill" Points="0,10 5,0 10,10" Stroke="White" StrokeThickness="2">
                    <Polygon.Fill>
                        <SolidColorBrush Color="Gray" Opacity="0.4"/>
                    </Polygon.Fill>
                </Polygon>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="ButtonPolygon" Property="Fill" Value="Black"></Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="ButtonPolygon" Property="Fill" Value="#FFA3C5EE"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="BottomTriButton" TargetType="{x:Type Button}">
            <Grid>
                <Polygon x:Name="ButtonPolygon" Stretch="Fill" Points="0,0 5,10 10,0" Stroke="White" StrokeThickness="2">
                    <Polygon.Fill>
                        <SolidColorBrush Color="Gray" Opacity="0.4"/>
                    </Polygon.Fill>
                </Polygon>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="ButtonPolygon" Property="Fill" Value="Black"></Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="ButtonPolygon" Property="Fill" Value="#FFA3C5EE"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="CornerTextBox" TargetType="{x:Type TextBox}">
            <Border BorderThickness="1" BorderBrush="#FFA3C5EE" CornerRadius="2">
                <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"/>
            </Border>
        </ControlTemplate>
        <Style x:Key="TextBoxErrorTemp" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="Validation.ErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate>
                                <DockPanel LastChildFill="True">
                                    <TextBlock DockPanel.Dock="Top" Foreground="Red" FontSize="14" FontWeight="Bold" Margin="8 0 14 0" Text="{Binding ElementName=MyAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                                    </TextBlock>
                                    <Border BorderBrush="Red" BorderThickness="2" Width="22">
                                        <AdornedElementPlaceholder Name="MyAdorner"/>
                                    </Border>
                                </DockPanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    
    <Border BorderThickness="1" BorderBrush="#FFA3C5EE" Background="#d9ebf6" CornerRadius="5">
        <Grid Grid.Column="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
            <TextBlock Name="tb" Grid.Column="0" FontSize="13" HorizontalAlignment="Center" VerticalAlignment="Center" Width="60" Margin="5"></TextBlock>

            <ToggleButton Name="cButton" Grid.Column="2" BorderThickness="0" Background="#d9ebf6" Width="30" Margin="5 2 5 2" IsChecked="{Binding ElementName=cPopup, Path=IsOpen}" Click="ShowCalendarClick">
                <Image Source="Calendar.png"/>
            </ToggleButton>
            
            <Popup x:Name="cPopup" StaysOpen="False" IsOpen="False" PlacementTarget="{Binding ElementName=cButton}" Placement="Bottom" HorizontalOffset="-80" VerticalOffset="1" AllowsTransparency="True" PopupAnimation="Fade">
                <Border BorderThickness="1" BorderBrush="#FFA3C5EE" Background="#d9ebf6" CornerRadius="3">
                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Calendar Grid.Row="0" x:Name="Calendar1" BorderBrush="#FFA3C5EE" Margin="0 -3" SelectedDatesChanged="ShowDate"/>

                        <Grid Grid.Row="1">
                            <Border BorderThickness="1" BorderBrush="#FFA3C5EE" Background="White" CornerRadius="0 0 2 2">
                                <Grid Grid.Column="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Column="0" Height="20" HorizontalAlignment="Left" Margin="5 2 0 -2">时:</TextBlock>
                                    <TextBox Grid.Column="0" x:Name="HourSet" Template="{StaticResource CornerTextBox}" Style="{StaticResource TextBoxErrorTemp}" Width="20" HorizontalAlignment="Left" HorizontalContentAlignment="Right" Margin="25,2,0,2" TextChanged="ShowHour">
                                        <TextBox.Text>
                                            <Binding Path="Hour" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                                                <Binding.ValidationRules>
                                                    <m:NumberValidationRuleForInt Max="23" Min="0"></m:NumberValidationRuleForInt>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <Button Grid.Column="0" Tag="hour" Template="{StaticResource UpTriButton}" HorizontalAlignment="Right" VerticalAlignment="Top" Height="8" Margin="0,2,0,0" Click="AddClick"/>
                                    <Button Grid.Column="0" Tag="hour" Template="{StaticResource BottomTriButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Height="8" Margin="0,0,0,2" Click="MinusClick"/>

                                    <TextBlock Grid.Column="1" Height="20" HorizontalAlignment="Left" Margin="5 2 0 -2">分:</TextBlock>
                                    <TextBox Grid.Column="1" x:Name="MinuteSet" Template="{StaticResource CornerTextBox}" Style="{StaticResource TextBoxErrorTemp}" Width="20" HorizontalAlignment="Left" HorizontalContentAlignment="Right" Margin="25,2,0,2" TextChanged="ShowMinute">
                                        <TextBox.Text>
                                            <Binding Path="Minute" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                                                <Binding.ValidationRules>
                                                    <m:NumberValidationRuleForInt Max="59" Min="0"></m:NumberValidationRuleForInt>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <Button Grid.Column="1" Tag="minute" Template="{StaticResource UpTriButton}" HorizontalAlignment="Right" VerticalAlignment="Top" Height="8" Margin="0,2,0,0" Click="AddClick"/>
                                    <Button Grid.Column="1" Tag="minute" Template="{StaticResource BottomTriButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Height="8" Margin="0,0,0,2" Click="MinusClick"/>

                                    <TextBlock Grid.Column="2" Height="20" HorizontalAlignment="Left" Margin="5 2 0 -2">秒:</TextBlock>
                                    <TextBox Grid.Column="2" x:Name="SecondSet" Template="{StaticResource CornerTextBox}" Style="{StaticResource TextBoxErrorTemp}" Width="20" HorizontalAlignment="Left" HorizontalContentAlignment="Right" Margin="25,2,0,2" TextChanged="ShowSecond">
                                        <TextBox.Text>
                                            <Binding Path="Second" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                                                <Binding.ValidationRules>
                                                    <m:NumberValidationRuleForInt Max="59" Min="0"></m:NumberValidationRuleForInt>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <Button Grid.Column="2" Tag="second" Template="{StaticResource UpTriButton}" HorizontalAlignment="Right" VerticalAlignment="Top" Height="8" Margin="0,2,0,0" Click="AddClick"/>
                                    <Button Grid.Column="2" Tag="second" Template="{StaticResource BottomTriButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Height="8" Margin="0,0,0,2" Click="MinusClick"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>
                </Border>
            </Popup>
            
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <TextBlock Grid.Column="0" x:Name="year" Text="0000 /" FontSize="13" VerticalAlignment="Center" Margin="5 0 0 0"/>
                <TextBlock Grid.Column="1" x:Name="month" Text="00 /" FontSize="13" VerticalAlignment="Center" Margin="3 0 0 0"/>
                <TextBlock Grid.Column="2" x:Name="day" Text="00" FontSize="13" VerticalAlignment="Center" Margin="3 0 0 0"/>
                <TextBlock Grid.Column="3" x:Name="hour" Text="00 :" FontSize="13" VerticalAlignment="Center" Margin="8 0 0 0"/>
                <TextBlock Grid.Column="4" x:Name="minute" Text="00 :" FontSize="13" VerticalAlignment="Center" Margin="3 0 0 0"/>
                <TextBlock Grid.Column="5" x:Name="second" Text="00" FontSize="13" VerticalAlignment="Center" Margin="3 0 0 0"/>
            </Grid>
        </Grid>
    </Border>
</UserControl>
