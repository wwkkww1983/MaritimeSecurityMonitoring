<Page x:Class="MaritimeSecurityMonitoring.UserManagement"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:m="clr-namespace:MaritimeSecurityMonitoring"
      xmlns:content="clr-namespace:MaritimeSecurityMonitoring.Content"
      mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="1200"
	  Title="UserManagement"
      Style="{StaticResource CommonPage}">
    <Page.Resources>
        <m:ReadOnlyToCheckedConverter x:Key="rtcc"/>
        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="30"/>
        </Style>
        <Style TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Height" Value="30"/>
        </Style>
        <Style x:Key="EditBox" TargetType="{x:Type TextBox}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=ReadOnly}" Value="true">
                    <Setter Property="IsReadOnly" Value="True"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=ReadOnly}" Value="false">
                    <Setter Property="IsReadOnly" Value="False"/>
                </DataTrigger>
                <Trigger Property="IsReadOnly" Value="False">
                    <Setter Property="Background" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="EditButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="bd" BorderThickness="0" Background="Transparent">
                            <Image x:Name="img" Source="Image\编辑.png"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="LightGray"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="Silver"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DeleteButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bd" BorderThickness="0" Background="Transparent">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="LightGray"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ComboBoxItem">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Height" Value="28" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Grid Background="{TemplateBinding Background}">
                            <Border x:Name="ItemBackground" IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                                Background="#d9ebf6" CornerRadius="4"/>
                            <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="ItemBackground" Property="Background" Value="#FFA3C5EE" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ItemBackground" Property="Background" Value="LightGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" BorderThickness="0"/>

                <Border Grid.Column="1" BorderThickness="0" Background="Transparent" Cursor="Hand"/>
                <Polygon Grid.Column="1" Stretch="Fill" Fill="#FFA3C5EE" Points="0,1 1,0 5,4.2 9,0 10,1 5,6" Margin="6 11 9 9"/>
            </Grid>
        </ControlTemplate>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <!-- ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen -->
                            <ToggleButton Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,0,22,0" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>

                            <!-- 必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它 -->
                            <TextBox Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Center" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                            <!-- Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen -->
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                    <Border x:Name="DropDownBorder" Background="#d9ebf6" BorderBrush="#FFA3C5EE" BorderThickness="1" CornerRadius="5"/>
                                    <ScrollViewer BorderThickness="0" Margin="1" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Path=ReadOnly}" Value="true">
                                <Setter Property="IsReadOnly" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=ReadOnly}" Value="false">
                                <Setter Property="IsReadOnly" Value="False"/>
                            </DataTrigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter TargetName="ToggleButton" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="ContentSite" Property="Margin" Value="0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid Margin="20 15">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="155"/>
        </Grid.RowDefinitions>

        <Border Grid.Row="0" Style="{StaticResource CommonBorder}" Margin="35 45 35 0">
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="1.2*"/>
                    <ColumnDefinition Width="1.5*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="1.2*"/>
                    <ColumnDefinition Width="1.2*"/>
                    <ColumnDefinition Width="1.5*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" x:Name="column1"/>
                <Grid Grid.Column="1" x:Name="column2"/>
                <Grid Grid.Column="2" x:Name="column3"/>
                <Grid Grid.Column="3" x:Name="column4"/>
                <Grid Grid.Column="4" x:Name="column5"/>
                <Grid Grid.Column="5" x:Name="column6"/>
                <Grid Grid.Column="6" x:Name="column7"/>
                <Grid Grid.Column="7" x:Name="column8"/>
                <Grid Grid.Column="8" x:Name="column9"/>

                <ListView Grid.ColumnSpan="10" Name="UserListView" ItemsSource="{Binding}" Background="Transparent" BorderThickness="0" Margin="-3 0">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="编号" Width="{Binding ElementName=column1,Path=ActualWidth}" DisplayMemberBinding="{Binding ID}"/>
                            <GridViewColumn Header="用户名" Width="{Binding ElementName=column2,Path=ActualWidth}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Style="{StaticResource EditBox}" Text="{Binding UserName}" Loaded="TextBox_Loaded"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="密码" Width="{Binding ElementName=column3,Path=ActualWidth}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Style="{StaticResource EditBox}" Text="{Binding Password}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="角色类型" Width="{Binding ElementName=column4,Path=ActualWidth}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox Width="80" SelectedIndex="{Binding Role}">
                                            <ComboBoxItem>管理员</ComboBoxItem>
                                            <ComboBoxItem>工程师</ComboBoxItem>
                                            <ComboBoxItem>操作员</ComboBoxItem>
                                            <ComboBoxItem>观察员</ComboBoxItem>
                                        </ComboBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="职位" Width="{Binding ElementName=column5,Path=ActualWidth}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Style="{StaticResource EditBox}" Text="{Binding Position}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="部门" Width="{Binding ElementName=column6,Path=ActualWidth}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Style="{StaticResource EditBox}" Text="{Binding Department}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="联系电话" Width="{Binding ElementName=column7,Path=ActualWidth}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Style="{StaticResource EditBox}" Text="{Binding Phone}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="邮箱" Width="{Binding ElementName=column8,Path=ActualWidth}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Style="{StaticResource EditBox}" Text="{Binding Mail}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="{Binding ElementName=column9,Path=ActualWidth}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <WrapPanel>
                                            <ToggleButton Click="Edit_Click" CommandParameter="{Binding Path=ID}" Style="{StaticResource EditButton}" Margin="0 0 15 0"
                                                          IsChecked="{Binding ReadOnly, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rtcc}}"/>
                                            <Button Click="Delete_Click" CommandParameter="{Binding Path=ID}" Style="{StaticResource DeleteButton}">
                                                <Image Source="Image\删除4.png"/>
                                            </Button>
                                        </WrapPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>
        </Border>

        <Grid Grid.Row="1">
            <WrapPanel>
                <content:IconButton ImagesSource="Image\增加.png" Click="AddTargetClick" Text="新  增" FontSize="16" Width="90" Height="30" Margin="170 15 0 0" xml:space="preserve"/>
            </WrapPanel>
        </Grid>
    </Grid>
</Page>